import importlib

import malware_downloader.services as services
import typer
from malware_downloader.utils.utils import load_hashes


def apikey_callback(ctx: typer.Context, param: typer.CallbackParam, value: str) -> str:
    if ctx.resilient_parsing:
        return value

    if not value:
        raise typer.BadParameter("No API key provided. Use --apikey or set API_KEY.")

    module_name = f"{services.__name__}.{ctx.parent.command.name}"
    try:
        module = importlib.import_module(module_name)
    except ImportError:
        raise typer.Exit(code=1, message=f"Could not import module '{module_name}'.")

    if hasattr(module, "set_apikey"):
        module.set_apikey(value)
    else:
        raise typer.Exit(
            code=1,
            message=f"'{ctx.parent.command.name}' does not implement 'set_apikey()'.",
        )

    return value


def hashes_callback(ctx: typer.Context, param: typer.CallbackParam, value: str):
    if ctx.resilient_parsing:
        return
    return load_hashes(value)
